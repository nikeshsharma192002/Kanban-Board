{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genius pc\\\\Desktop\\\\Kanban Board\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Column from './Column';\nimport { updateTaskStatus } from '../features/tasks/tasksSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = {\n  todo: 'To Do',\n  inprogress: 'In Progress',\n  peerreview: 'Peer Review',\n  done: 'Done'\n};\nconst Board = () => {\n  _s();\n  const tasks = useSelector(state => state.tasks.tasks);\n  const searchQuery = useSelector(state => state.tasks.searchQuery);\n  const dispatch = useDispatch();\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    dispatch(updateTaskStatus({\n      id: result.draggableId,\n      status: result.destination.droppableId\n    }));\n  };\n  const filteredTasks = tasks.filter(task => task.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: Object.entries(columns).map(([columnId, columnName]) => /*#__PURE__*/_jsxDEV(Column, {\n        columnId: columnId,\n        columnName: columnName,\n        tasks: filteredTasks.filter(task => task.status === columnId)\n      }, columnId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"vajzMO3hECMRBFTZJnrPh1nKkc8=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useSelector","useDispatch","DragDropContext","Column","updateTaskStatus","jsxDEV","_jsxDEV","columns","todo","inprogress","peerreview","done","Board","_s","tasks","state","searchQuery","dispatch","onDragEnd","result","destination","id","draggableId","status","droppableId","filteredTasks","filter","task","title","toLowerCase","includes","children","className","Object","entries","map","columnId","columnName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/genius pc/Desktop/Kanban Board/src/components/Board.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport Column from './Column';\r\nimport { updateTaskStatus } from '../features/tasks/tasksSlice';\r\n\r\nconst columns = {\r\n  todo: 'To Do',\r\n  inprogress: 'In Progress',\r\n  peerreview: 'Peer Review',\r\n  done: 'Done',\r\n};\r\n\r\nconst Board = () => {\r\n  const tasks = useSelector(state => state.tasks.tasks);\r\n  const searchQuery = useSelector(state => state.tasks.searchQuery);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n\r\n    dispatch(updateTaskStatus({ id: result.draggableId, status: result.destination.droppableId }));\r\n  };\r\n\r\n  const filteredTasks = tasks.filter(task => \r\n    task.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"board\">\r\n        {Object.entries(columns).map(([columnId, columnName]) => (\r\n          <Column\r\n            key={columnId}\r\n            columnId={columnId}\r\n            columnName={columnName}\r\n            tasks={filteredTasks.filter(task => task.status === columnId)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,QAAQ,qBAAqB;AACrD,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,gBAAgB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,OAAO,GAAG;EACdC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE,aAAa;EACzBC,UAAU,EAAE,aAAa;EACzBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,KAAK,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EACrD,MAAME,WAAW,GAAGhB,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACD,KAAK,CAACE,WAAW,CAAC;EACjE,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,MAAMiB,SAAS,GAAIC,MAAM,IAAK;IAC5B,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;IAEzBH,QAAQ,CAACb,gBAAgB,CAAC;MAAEiB,EAAE,EAAEF,MAAM,CAACG,WAAW;MAAEC,MAAM,EAAEJ,MAAM,CAACC,WAAW,CAACI;IAAY,CAAC,CAAC,CAAC;EAChG,CAAC;EAED,MAAMC,aAAa,GAAGX,KAAK,CAACY,MAAM,CAACC,IAAI,IACrCA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACd,WAAW,CAACa,WAAW,CAAC,CAAC,CAC7D,CAAC;EAED,oBACEvB,OAAA,CAACJ,eAAe;IAACgB,SAAS,EAAEA,SAAU;IAAAa,QAAA,eACpCzB,OAAA;MAAK0B,SAAS,EAAC,OAAO;MAAAD,QAAA,EACnBE,MAAM,CAACC,OAAO,CAAC3B,OAAO,CAAC,CAAC4B,GAAG,CAAC,CAAC,CAACC,QAAQ,EAAEC,UAAU,CAAC,kBAClD/B,OAAA,CAACH,MAAM;QAELiC,QAAQ,EAAEA,QAAS;QACnBC,UAAU,EAAEA,UAAW;QACvBvB,KAAK,EAAEW,aAAa,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACJ,MAAM,KAAKa,QAAQ;MAAE,GAHzDA,QAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEtB,CAAC;AAAC5B,EAAA,CA7BID,KAAK;EAAA,QACKZ,WAAW,EACLA,WAAW,EACdC,WAAW;AAAA;AAAAyC,EAAA,GAHxB9B,KAAK;AA+BX,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}