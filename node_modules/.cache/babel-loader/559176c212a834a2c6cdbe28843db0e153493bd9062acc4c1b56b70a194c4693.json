{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialTasks = [{\n  id: '1',\n  title: 'Task 1',\n  description: 'Description 1',\n  status: 'todo'\n}, {\n  id: '2',\n  title: 'Task 2',\n  description: 'Description 2',\n  status: 'inprogress'\n}, {\n  id: '3',\n  title: 'Task 3',\n  description: 'Description 3',\n  status: 'peerreview'\n}, {\n  id: '4',\n  title: 'Task 4',\n  description: 'Description 4',\n  status: 'done'\n}];\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: {\n    tasks: initialTasks,\n    searchQuery: ''\n  },\n  reducers: {\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n    updateTaskStatus: (state, action) => {\n      const {\n        id,\n        status\n      } = action.payload;\n      const task = state.tasks.find(task => task.id === id);\n      if (task) {\n        task.status = status;\n      }\n    },\n    setSearchQuery: (state, action) => {\n      state.searchQuery = action.payload;\n    }\n  }\n});\nexport const {\n  addTask,\n  updateTaskStatus,\n  setSearchQuery\n} = tasksSlice.actions;\nexport default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","initialTasks","id","title","description","status","tasksSlice","name","initialState","tasks","searchQuery","reducers","addTask","state","action","push","payload","updateTaskStatus","task","find","setSearchQuery","actions","reducer"],"sources":["C:/Users/genius pc/Desktop/Kanban Board/src/features/tasks/tasksSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialTasks = [\r\n  { id: '1', title: 'Task 1', description: 'Description 1', status: 'todo' },\r\n  { id: '2', title: 'Task 2', description: 'Description 2', status: 'inprogress' },\r\n  { id: '3', title: 'Task 3', description: 'Description 3', status: 'peerreview' },\r\n  { id: '4', title: 'Task 4', description: 'Description 4', status: 'done' },\r\n];\r\n\r\nconst tasksSlice = createSlice({\r\n  name: 'tasks',\r\n  initialState: {\r\n    tasks: initialTasks,\r\n    searchQuery: '',\r\n  },\r\n  reducers: {\r\n    addTask: (state, action) => {\r\n      state.tasks.push(action.payload);\r\n    },\r\n    updateTaskStatus: (state, action) => {\r\n      const { id, status } = action.payload;\r\n      const task = state.tasks.find(task => task.id === id);\r\n      if (task) {\r\n        task.status = status;\r\n      }\r\n    },\r\n    setSearchQuery: (state, action) => {\r\n      state.searchQuery = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addTask, updateTaskStatus, setSearchQuery } = tasksSlice.actions;\r\n\r\nexport default tasksSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,QAAQ;EAAEC,WAAW,EAAE,eAAe;EAAEC,MAAM,EAAE;AAAO,CAAC,EAC1E;EAAEH,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,QAAQ;EAAEC,WAAW,EAAE,eAAe;EAAEC,MAAM,EAAE;AAAa,CAAC,EAChF;EAAEH,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,QAAQ;EAAEC,WAAW,EAAE,eAAe;EAAEC,MAAM,EAAE;AAAa,CAAC,EAChF;EAAEH,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,QAAQ;EAAEC,WAAW,EAAE,eAAe;EAAEC,MAAM,EAAE;AAAO,CAAC,CAC3E;AAED,MAAMC,UAAU,GAAGN,WAAW,CAAC;EAC7BO,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAER,YAAY;IACnBS,WAAW,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACJ,KAAK,CAACM,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAClC,CAAC;IACDC,gBAAgB,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACnC,MAAM;QAAEZ,EAAE;QAAEG;MAAO,CAAC,GAAGS,MAAM,CAACE,OAAO;MACrC,MAAME,IAAI,GAAGL,KAAK,CAACJ,KAAK,CAACU,IAAI,CAACD,IAAI,IAAIA,IAAI,CAAChB,EAAE,KAAKA,EAAE,CAAC;MACrD,IAAIgB,IAAI,EAAE;QACRA,IAAI,CAACb,MAAM,GAAGA,MAAM;MACtB;IACF,CAAC;IACDe,cAAc,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACH,WAAW,GAAGI,MAAM,CAACE,OAAO;IACpC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,OAAO;EAAEK,gBAAgB;EAAEG;AAAe,CAAC,GAAGd,UAAU,CAACe,OAAO;AAE/E,eAAef,UAAU,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}