{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const initialTasks=[{id:'1',title:'Task 1',description:'Description 1',status:'todo'},{id:'2',title:'Task 2',description:'Description 2',status:'inprogress'},{id:'3',title:'Task 3',description:'Description 3',status:'peerreview'},{id:'4',title:'Task 4',description:'Description 4',status:'done'}];const tasksSlice=createSlice({name:'tasks',initialState:{tasks:initialTasks,searchQuery:''},reducers:{addTask:(state,action)=>{state.tasks.push(action.payload);},updateTaskStatus:(state,action)=>{const{id,status}=action.payload;const task=state.tasks.find(task=>task.id===id);if(task){task.status=status;}},setSearchQuery:(state,action)=>{state.searchQuery=action.payload;}}});export const{addTask,updateTaskStatus,setSearchQuery}=tasksSlice.actions;export default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","initialTasks","id","title","description","status","tasksSlice","name","initialState","tasks","searchQuery","reducers","addTask","state","action","push","payload","updateTaskStatus","task","find","setSearchQuery","actions","reducer"],"sources":["C:/Users/genius pc/Desktop/Kanban Board/src/features/tasks/tasksSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialTasks = [\r\n  { id: '1', title: 'Task 1', description: 'Description 1', status: 'todo' },\r\n  { id: '2', title: 'Task 2', description: 'Description 2', status: 'inprogress' },\r\n  { id: '3', title: 'Task 3', description: 'Description 3', status: 'peerreview' },\r\n  { id: '4', title: 'Task 4', description: 'Description 4', status: 'done' },\r\n];\r\n\r\nconst tasksSlice = createSlice({\r\n  name: 'tasks',\r\n  initialState: {\r\n    tasks: initialTasks,\r\n    searchQuery: '',\r\n  },\r\n  reducers: {\r\n    addTask: (state, action) => {\r\n      state.tasks.push(action.payload);\r\n    },\r\n    updateTaskStatus: (state, action) => {\r\n      const { id, status } = action.payload;\r\n      const task = state.tasks.find(task => task.id === id);\r\n      if (task) {\r\n        task.status = status;\r\n      }\r\n    },\r\n    setSearchQuery: (state, action) => {\r\n      state.searchQuery = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addTask, updateTaskStatus, setSearchQuery } = tasksSlice.actions;\r\n\r\nexport default tasksSlice.reducer;\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,YAAY,CAAG,CACnB,CAAEC,EAAE,CAAE,GAAG,CAAEC,KAAK,CAAE,QAAQ,CAAEC,WAAW,CAAE,eAAe,CAAEC,MAAM,CAAE,MAAO,CAAC,CAC1E,CAAEH,EAAE,CAAE,GAAG,CAAEC,KAAK,CAAE,QAAQ,CAAEC,WAAW,CAAE,eAAe,CAAEC,MAAM,CAAE,YAAa,CAAC,CAChF,CAAEH,EAAE,CAAE,GAAG,CAAEC,KAAK,CAAE,QAAQ,CAAEC,WAAW,CAAE,eAAe,CAAEC,MAAM,CAAE,YAAa,CAAC,CAChF,CAAEH,EAAE,CAAE,GAAG,CAAEC,KAAK,CAAE,QAAQ,CAAEC,WAAW,CAAE,eAAe,CAAEC,MAAM,CAAE,MAAO,CAAC,CAC3E,CAED,KAAM,CAAAC,UAAU,CAAGN,WAAW,CAAC,CAC7BO,IAAI,CAAE,OAAO,CACbC,YAAY,CAAE,CACZC,KAAK,CAAER,YAAY,CACnBS,WAAW,CAAE,EACf,CAAC,CACDC,QAAQ,CAAE,CACRC,OAAO,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CAC1BD,KAAK,CAACJ,KAAK,CAACM,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC,CAClC,CAAC,CACDC,gBAAgB,CAAEA,CAACJ,KAAK,CAAEC,MAAM,GAAK,CACnC,KAAM,CAAEZ,EAAE,CAAEG,MAAO,CAAC,CAAGS,MAAM,CAACE,OAAO,CACrC,KAAM,CAAAE,IAAI,CAAGL,KAAK,CAACJ,KAAK,CAACU,IAAI,CAACD,IAAI,EAAIA,IAAI,CAAChB,EAAE,GAAKA,EAAE,CAAC,CACrD,GAAIgB,IAAI,CAAE,CACRA,IAAI,CAACb,MAAM,CAAGA,MAAM,CACtB,CACF,CAAC,CACDe,cAAc,CAAEA,CAACP,KAAK,CAAEC,MAAM,GAAK,CACjCD,KAAK,CAACH,WAAW,CAAGI,MAAM,CAACE,OAAO,CACpC,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEJ,OAAO,CAAEK,gBAAgB,CAAEG,cAAe,CAAC,CAAGd,UAAU,CAACe,OAAO,CAE/E,cAAe,CAAAf,UAAU,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}